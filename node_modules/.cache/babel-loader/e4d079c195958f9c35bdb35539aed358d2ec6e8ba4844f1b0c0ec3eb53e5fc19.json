{"ast":null,"code":"var _jsxFileName = \"/Users/jm/Documents/ReactCourse/food-order-app/src/components/Cart/Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useRef } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"./../UI/Modal\";\nimport CartContext from \"../../context/cart-context\";\nimport CartItem from \"./CartItem\";\nimport CustomerInformationForm from \"./CartForms/CustomerInformationForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = props => {\n  _s();\n  // Overview of orders and option to proceed to step 2.\n  const [ordering, setOrdering] = useState(true);\n  // Step 2 - Order form with name, address and payment questions\n  const [orderForm, setOrderForm] = useState(false);\n  // Import Cart Context from the Context store.\n  const cartContext = useContext(CartContext);\n  // Show total amount fixed to 2 decimal places\n  const totalAmount = `$${cartContext.totalAmount.toFixed(2)}`;\n  // Check if the cart has items.\n  const hasItems = cartContext.items.length > 0;\n  // Standard payment options.\n  const paymentOptions = [\"Cash\", \"Gopay\", \"Paylater\"];\n  // Delivery times.\n  const deliveryTimes = [\"16:00\", \"16:15\", \"17:00\", \"17:15\", \"17:30\", \"17:45\", \"18:00\", \"18:15\", \"18:30\", \"18:45\", \"19:00\", \"19:15\", \"19:30\", \"19:45\", \"20:00\"];\n  // Current date and time.\n  const date = new Date();\n  const currentTime = date.getHours() + \":\" + (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  // Checks currenttime and filter the delivery times shown.\n  const availableDeliveryTimes = deliveryTimes.filter(time => time > currentTime);\n  // Add +1 to the amount of the selected product in the cart.\n  const cartItemAddHandler = item => {\n    cartContext.addItem(item);\n  };\n  // Removes -1 to the amount of the selected product in the cart.\n  const cartItemRemoveHandler = id => {\n    cartContext.removeItem(id);\n  };\n  // Map throught the items in the cart and returns JSX with the styled CartItem component.\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartContext.items.map(item => {\n      console.log(item.price);\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        amount: item.amount,\n        onAdd: cartItemAddHandler.bind(null, item),\n        onRemove: cartItemRemoveHandler.bind(null, item.id)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n  // If user clicks next we go to the user information form, on orderform if user clicks cancel we go back to the\n  const stepTwoHandler = () => {\n    setOrdering(prev => !prev);\n    setOrderForm(prev => !prev);\n  };\n  const checkboxChangeHandler = e => {\n    const checkboxes = document.querySelectorAll(\"input[type=checkbox]\");\n    checkboxes.forEach(checkbox => {\n      if (checkbox !== e.target) {\n        checkbox.checked = false;\n      }\n    });\n  };\n  const customerNameRef = useRef();\n  const customerAddressRef = useRef();\n  const deliveryTimeRef = useRef();\n  const paymentMethodRefs = paymentOptions.map(() => /*#__PURE__*/React.createRef());\n  const orderedItems = cartContext.items.map(item => {\n    return {\n      name: item.name,\n      price: item.price,\n      amount: item.amount\n    };\n  });\n  const customerDetailSubmitHandler = e => {\n    e.preventDefault();\n    const customerName = customerNameRef.current.value;\n    const customerAddress = customerAddressRef.current.value;\n    const deliveryTime = deliveryTimeRef.current.value;\n    if (!paymentMethodRefs) return;\n    if (paymentMethodRefs) console.log(paymentMethodRefs);\n    const paymentMethodIndex = paymentOptions.findIndex((_, index) => paymentMethodRefs[index].current.checked);\n    const selectedPaymentMethod = paymentMethodRefs[paymentMethodIndex].current.value;\n    let orderInformation = {\n      customerName,\n      customerAddress,\n      deliveryTime,\n      paymentMethod: selectedPaymentMethod,\n      orderedItems: orderedItems,\n      totalAmount: totalAmount\n    };\n    console.log(orderInformation);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    setCartStatus: props.setCartStatus,\n    children: [ordering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"cart-items\"],\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[\"button--alt\"],\n          onClick: props.setCartStatus,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: stepTwoHandler,\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), orderForm && /*#__PURE__*/_jsxDEV(CustomerInformationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"KbTK9L08+b/YD4GPXA0KfZEr9VM=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useState","useRef","classes","Modal","CartContext","CartItem","CustomerInformationForm","Cart","props","ordering","setOrdering","orderForm","setOrderForm","cartContext","totalAmount","toFixed","hasItems","items","length","paymentOptions","deliveryTimes","date","Date","currentTime","getHours","getMinutes","availableDeliveryTimes","filter","time","cartItemAddHandler","item","addItem","cartItemRemoveHandler","id","removeItem","cartItems","map","console","log","price","name","amount","bind","stepTwoHandler","prev","checkboxChangeHandler","e","checkboxes","document","querySelectorAll","forEach","checkbox","target","checked","customerNameRef","customerAddressRef","deliveryTimeRef","paymentMethodRefs","createRef","orderedItems","customerDetailSubmitHandler","preventDefault","customerName","current","value","customerAddress","deliveryTime","paymentMethodIndex","findIndex","_","index","selectedPaymentMethod","orderInformation","paymentMethod","setCartStatus","total","actions","button"],"sources":["/Users/jm/Documents/ReactCourse/food-order-app/src/components/Cart/Cart.js"],"sourcesContent":["import React, { useContext, useState, useRef } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"./../UI/Modal\";\nimport CartContext from \"../../context/cart-context\";\nimport CartItem from \"./CartItem\";\nimport CustomerInformationForm from \"./CartForms/CustomerInformationForm\";\n\nconst Cart = (props) => {\n  // Overview of orders and option to proceed to step 2.\n  const [ordering, setOrdering] = useState(true);\n  // Step 2 - Order form with name, address and payment questions\n  const [orderForm, setOrderForm] = useState(false);\n  // Import Cart Context from the Context store.\n  const cartContext = useContext(CartContext);\n  // Show total amount fixed to 2 decimal places\n  const totalAmount = `$${cartContext.totalAmount.toFixed(2)}`;\n  // Check if the cart has items.\n  const hasItems = cartContext.items.length > 0;\n  // Standard payment options.\n  const paymentOptions = [\"Cash\", \"Gopay\", \"Paylater\"];\n  // Delivery times.\n  const deliveryTimes = [\n    \"16:00\",\n    \"16:15\",\n    \"17:00\",\n    \"17:15\",\n    \"17:30\",\n    \"17:45\",\n    \"18:00\",\n    \"18:15\",\n    \"18:30\",\n    \"18:45\",\n    \"19:00\",\n    \"19:15\",\n    \"19:30\",\n    \"19:45\",\n    \"20:00\",\n  ];\n  // Current date and time.\n  const date = new Date();\n  const currentTime =\n    date.getHours() +\n    \":\" +\n    (date.getMinutes() < 10 ? \"0\" : \"\") +\n    date.getMinutes();\n  // Checks currenttime and filter the delivery times shown.\n  const availableDeliveryTimes = deliveryTimes.filter(\n    (time) => time > currentTime\n  );\n  // Add +1 to the amount of the selected product in the cart.\n  const cartItemAddHandler = (item) => {\n    cartContext.addItem(item);\n  };\n  // Removes -1 to the amount of the selected product in the cart.\n  const cartItemRemoveHandler = (id) => {\n    cartContext.removeItem(id);\n  };\n  // Map throught the items in the cart and returns JSX with the styled CartItem component.\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartContext.items.map((item) => {\n        console.log(item.price);\n        return (\n          <CartItem\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            price={item.price}\n            amount={item.amount}\n            onAdd={cartItemAddHandler.bind(null, item)}\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          />\n        );\n      })}\n    </ul>\n  );\n  // If user clicks next we go to the user information form, on orderform if user clicks cancel we go back to the\n  const stepTwoHandler = () => {\n    setOrdering((prev) => !prev);\n    setOrderForm((prev) => !prev);\n  };\n\n  const checkboxChangeHandler = (e) => {\n    const checkboxes = document.querySelectorAll(\"input[type=checkbox]\");\n    checkboxes.forEach((checkbox) => {\n      if (checkbox !== e.target) {\n        checkbox.checked = false;\n      }\n    });\n  };\n\n  const customerNameRef = useRef();\n  const customerAddressRef = useRef();\n  const deliveryTimeRef = useRef();\n  const paymentMethodRefs = paymentOptions.map(() => React.createRef());\n\n  const orderedItems = cartContext.items.map((item) => {\n    return {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n    };\n  });\n\n  const customerDetailSubmitHandler = (e) => {\n    e.preventDefault();\n    const customerName = customerNameRef.current.value;\n    const customerAddress = customerAddressRef.current.value;\n    const deliveryTime = deliveryTimeRef.current.value;\n    if (!paymentMethodRefs) return;\n    if (paymentMethodRefs) console.log(paymentMethodRefs);\n\n    const paymentMethodIndex = paymentOptions.findIndex(\n      (_, index) => paymentMethodRefs[index].current.checked\n    );\n\n    const selectedPaymentMethod =\n      paymentMethodRefs[paymentMethodIndex].current.value;\n\n    let orderInformation = {\n      customerName,\n      customerAddress,\n      deliveryTime,\n      paymentMethod: selectedPaymentMethod,\n      orderedItems: orderedItems,\n      totalAmount: totalAmount,\n    };\n\n    console.log(orderInformation);\n  };\n\n  return (\n    <Modal setCartStatus={props.setCartStatus}>\n      {ordering && (\n        <div className={classes[\"cart-items\"]}>\n          {cartItems}\n          <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n          </div>\n          <div className={classes.actions}>\n            <button\n              className={classes[\"button--alt\"]}\n              onClick={props.setCartStatus}\n            >\n              Close\n            </button>\n            {hasItems && (\n              <button className={classes.button} onClick={stepTwoHandler}>\n                Order\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {orderForm && <CustomerInformationForm />}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC3D,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,uBAAuB,MAAM,qCAAqC;AAAC;AAE1E,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACA,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAMa,WAAW,GAAGd,UAAU,CAACK,WAAW,CAAC;EAC3C;EACA,MAAMU,WAAW,GAAI,IAAGD,WAAW,CAACC,WAAW,CAACC,OAAO,CAAC,CAAC,CAAE,EAAC;EAC5D;EACA,MAAMC,QAAQ,GAAGH,WAAW,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC;EAC7C;EACA,MAAMC,cAAc,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;EACpD;EACA,MAAMC,aAAa,GAAG,CACpB,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;EACD;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,WAAW,GACfF,IAAI,CAACG,QAAQ,EAAE,GACf,GAAG,IACFH,IAAI,CAACI,UAAU,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,GACnCJ,IAAI,CAACI,UAAU,EAAE;EACnB;EACA,MAAMC,sBAAsB,GAAGN,aAAa,CAACO,MAAM,CAChDC,IAAI,IAAKA,IAAI,GAAGL,WAAW,CAC7B;EACD;EACA,MAAMM,kBAAkB,GAAIC,IAAI,IAAK;IACnCjB,WAAW,CAACkB,OAAO,CAACD,IAAI,CAAC;EAC3B,CAAC;EACD;EACA,MAAME,qBAAqB,GAAIC,EAAE,IAAK;IACpCpB,WAAW,CAACqB,UAAU,CAACD,EAAE,CAAC;EAC5B,CAAC;EACD;EACA,MAAME,SAAS,gBACb;IAAI,SAAS,EAAEjC,OAAO,CAAC,YAAY,CAAE;IAAA,UAClCW,WAAW,CAACI,KAAK,CAACmB,GAAG,CAAEN,IAAI,IAAK;MAC/BO,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,KAAK,CAAC;MACvB,oBACE,QAAC,QAAQ;QAEP,EAAE,EAAET,IAAI,CAACG,EAAG;QACZ,IAAI,EAAEH,IAAI,CAACU,IAAK;QAChB,KAAK,EAAEV,IAAI,CAACS,KAAM;QAClB,MAAM,EAAET,IAAI,CAACW,MAAO;QACpB,KAAK,EAAEZ,kBAAkB,CAACa,IAAI,CAAC,IAAI,EAAEZ,IAAI,CAAE;QAC3C,QAAQ,EAAEE,qBAAqB,CAACU,IAAI,CAAC,IAAI,EAAEZ,IAAI,CAACG,EAAE;MAAE,GAN/CH,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAOZ;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEL;EACD;EACA,MAAMU,cAAc,GAAG,MAAM;IAC3BjC,WAAW,CAAEkC,IAAI,IAAK,CAACA,IAAI,CAAC;IAC5BhC,YAAY,CAAEgC,IAAI,IAAK,CAACA,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMC,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,sBAAsB,CAAC;IACpEF,UAAU,CAACG,OAAO,CAAEC,QAAQ,IAAK;MAC/B,IAAIA,QAAQ,KAAKL,CAAC,CAACM,MAAM,EAAE;QACzBD,QAAQ,CAACE,OAAO,GAAG,KAAK;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,eAAe,GAAGrD,MAAM,EAAE;EAChC,MAAMsD,kBAAkB,GAAGtD,MAAM,EAAE;EACnC,MAAMuD,eAAe,GAAGvD,MAAM,EAAE;EAChC,MAAMwD,iBAAiB,GAAGtC,cAAc,CAACiB,GAAG,CAAC,mBAAMtC,KAAK,CAAC4D,SAAS,EAAE,CAAC;EAErE,MAAMC,YAAY,GAAG9C,WAAW,CAACI,KAAK,CAACmB,GAAG,CAAEN,IAAI,IAAK;IACnD,OAAO;MACLU,IAAI,EAAEV,IAAI,CAACU,IAAI;MACfD,KAAK,EAAET,IAAI,CAACS,KAAK;MACjBE,MAAM,EAAEX,IAAI,CAACW;IACf,CAAC;EACH,CAAC,CAAC;EAEF,MAAMmB,2BAA2B,GAAId,CAAC,IAAK;IACzCA,CAAC,CAACe,cAAc,EAAE;IAClB,MAAMC,YAAY,GAAGR,eAAe,CAACS,OAAO,CAACC,KAAK;IAClD,MAAMC,eAAe,GAAGV,kBAAkB,CAACQ,OAAO,CAACC,KAAK;IACxD,MAAME,YAAY,GAAGV,eAAe,CAACO,OAAO,CAACC,KAAK;IAClD,IAAI,CAACP,iBAAiB,EAAE;IACxB,IAAIA,iBAAiB,EAAEpB,OAAO,CAACC,GAAG,CAACmB,iBAAiB,CAAC;IAErD,MAAMU,kBAAkB,GAAGhD,cAAc,CAACiD,SAAS,CACjD,CAACC,CAAC,EAAEC,KAAK,KAAKb,iBAAiB,CAACa,KAAK,CAAC,CAACP,OAAO,CAACV,OAAO,CACvD;IAED,MAAMkB,qBAAqB,GACzBd,iBAAiB,CAACU,kBAAkB,CAAC,CAACJ,OAAO,CAACC,KAAK;IAErD,IAAIQ,gBAAgB,GAAG;MACrBV,YAAY;MACZG,eAAe;MACfC,YAAY;MACZO,aAAa,EAAEF,qBAAqB;MACpCZ,YAAY,EAAEA,YAAY;MAC1B7C,WAAW,EAAEA;IACf,CAAC;IAEDuB,OAAO,CAACC,GAAG,CAACkC,gBAAgB,CAAC;EAC/B,CAAC;EAED,oBACE,QAAC,KAAK;IAAC,aAAa,EAAEhE,KAAK,CAACkE,aAAc;IAAA,WACvCjE,QAAQ,iBACP;MAAK,SAAS,EAAEP,OAAO,CAAC,YAAY,CAAE;MAAA,WACnCiC,SAAS,eACV;QAAK,SAAS,EAAEjC,OAAO,CAACyE,KAAM;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAA,UAAO7D;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACtB,eACN;QAAK,SAAS,EAAEZ,OAAO,CAAC0E,OAAQ;QAAA,wBAC9B;UACE,SAAS,EAAE1E,OAAO,CAAC,aAAa,CAAE;UAClC,OAAO,EAAEM,KAAK,CAACkE,aAAc;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGtB,EACR1D,QAAQ,iBACP;UAAQ,SAAS,EAAEd,OAAO,CAAC2E,MAAO;UAAC,OAAO,EAAElC,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAG5D;MAAA;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QAET,EACAhC,SAAS,iBAAI,QAAC,uBAAuB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEZ,CAAC;AAAC,GAvJIJ,IAAI;AAAA,KAAJA,IAAI;AAyJV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}