{"ast":null,"code":"var _jsxFileName = \"/Users/jm/Documents/ReactCourse/food-order-app/src/components/Cart/CartForms/CustomerInformationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useContext, useState } from \"react\";\nimport classes from \"../Cart.module.css\";\nimport CartContext from \"../../../context/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CustomerInformationForm(_ref) {\n  _s();\n  let {\n    stepTwoHandler,\n    totalAmount\n  } = _ref;\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  // Import Cart Context from the Context store.\n  const cartContext = useContext(CartContext);\n  // Standard payment options.\n  const paymentOptions = [\"Cash\", \"Gopay\", \"Paylater\"];\n  // Delivery times.\n  const deliveryTimes = [\"16:00\", \"16:15\", \"17:00\", \"17:15\", \"17:30\", \"17:45\", \"18:00\", \"18:15\", \"18:30\", \"18:45\", \"19:00\", \"19:15\", \"19:30\", \"19:45\", \"20:00\"];\n  // Current date and time.\n  const date = new Date();\n  const currentTime = date.getHours() + \":\" + (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  // Checks currenttime and filter the delivery times shown.\n  const availableDeliveryTimes = deliveryTimes.filter(time => time > currentTime);\n  const checkboxChangeHandler = e => {\n    const checkboxes = document.querySelectorAll(\"input[type=checkbox]\");\n    checkboxes.forEach(checkbox => {\n      if (checkbox !== e.target) {\n        checkbox.checked = false;\n      }\n    });\n  };\n  const customerNameRef = useRef();\n  const customerAddressRef = useRef();\n  const deliveryTimeRef = useRef();\n  const paymentMethodRefs = paymentOptions.map(() => /*#__PURE__*/React.createRef());\n  const orderedItems = cartContext.items.map(item => {\n    return {\n      name: item.name,\n      price: item.price,\n      amount: item.amount\n    };\n  });\n  const customerDetailSubmitHandler = e => {\n    e.preventDefault();\n    const customerName = customerNameRef.current.value;\n    const customerAddress = customerAddressRef.current.value;\n    const deliveryTime = deliveryTimeRef.current.value;\n    if (customerName === \"\") {\n      setError(true);\n      setErrorMessage(\"Name is required\");\n      return;\n    }\n    if (customerAddress === \"\" | customerAddress.trim().length < 10) {\n      setError(true);\n      setErrorMessage(\"Address is required\");\n    }\n    if (paymentMethodRefs) console.log(paymentMethodRefs);\n    const paymentMethodIndex = paymentOptions.findIndex((_, index) => paymentMethodRefs[index].current.checked);\n    const selectedPaymentMethod = paymentMethodRefs[paymentMethodIndex].current.value;\n    let orderInformation = {\n      customerName,\n      customerAddress,\n      deliveryTime,\n      paymentMethod: selectedPaymentMethod,\n      orderedItems: orderedItems,\n      totalAmount: totalAmount\n    };\n    console.log(orderInformation);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        ref: customerNameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full address\",\n        ref: customerAddressRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Delivery time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"deliveryTime\",\n        ref: deliveryTimeRef,\n        children: availableDeliveryTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Payment method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.row,\n        children: paymentOptions.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option,\n              ref: paymentMethodRefs[index],\n              onChange: checkboxChangeHandler\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.label_payment,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [!error ? \"\" : errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[\"button--alt\"],\n          onClick: stepTwoHandler,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: customerDetailSubmitHandler,\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CustomerInformationForm, \"PV1fCjEN9wG1K/h9CeqpkM+Rl+Q=\");\n_c = CustomerInformationForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerInformationForm\");","map":{"version":3,"names":["React","useRef","useContext","useState","classes","CartContext","CustomerInformationForm","stepTwoHandler","totalAmount","error","setError","errorMessage","setErrorMessage","cartContext","paymentOptions","deliveryTimes","date","Date","currentTime","getHours","getMinutes","availableDeliveryTimes","filter","time","checkboxChangeHandler","e","checkboxes","document","querySelectorAll","forEach","checkbox","target","checked","customerNameRef","customerAddressRef","deliveryTimeRef","paymentMethodRefs","map","createRef","orderedItems","items","item","name","price","amount","customerDetailSubmitHandler","preventDefault","customerName","current","value","customerAddress","deliveryTime","trim","length","console","log","paymentMethodIndex","findIndex","_","index","selectedPaymentMethod","orderInformation","paymentMethod","form","row","option","label_payment","actions","button"],"sources":["/Users/jm/Documents/ReactCourse/food-order-app/src/components/Cart/CartForms/CustomerInformationForm.js"],"sourcesContent":["import React, { useRef, useContext, useState } from \"react\";\nimport classes from \"../Cart.module.css\";\nimport CartContext from \"../../../context/cart-context\";\n\nexport default function CustomerInformationForm({\n  stepTwoHandler,\n  totalAmount,\n}) {\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  // Import Cart Context from the Context store.\n  const cartContext = useContext(CartContext);\n  // Standard payment options.\n  const paymentOptions = [\"Cash\", \"Gopay\", \"Paylater\"];\n  // Delivery times.\n  const deliveryTimes = [\n    \"16:00\",\n    \"16:15\",\n    \"17:00\",\n    \"17:15\",\n    \"17:30\",\n    \"17:45\",\n    \"18:00\",\n    \"18:15\",\n    \"18:30\",\n    \"18:45\",\n    \"19:00\",\n    \"19:15\",\n    \"19:30\",\n    \"19:45\",\n    \"20:00\",\n  ];\n  // Current date and time.\n  const date = new Date();\n  const currentTime =\n    date.getHours() +\n    \":\" +\n    (date.getMinutes() < 10 ? \"0\" : \"\") +\n    date.getMinutes();\n  // Checks currenttime and filter the delivery times shown.\n  const availableDeliveryTimes = deliveryTimes.filter(\n    (time) => time > currentTime\n  );\n\n  const checkboxChangeHandler = (e) => {\n    const checkboxes = document.querySelectorAll(\"input[type=checkbox]\");\n    checkboxes.forEach((checkbox) => {\n      if (checkbox !== e.target) {\n        checkbox.checked = false;\n      }\n    });\n  };\n\n  const customerNameRef = useRef();\n  const customerAddressRef = useRef();\n  const deliveryTimeRef = useRef();\n  const paymentMethodRefs = paymentOptions.map(() => React.createRef());\n\n  const orderedItems = cartContext.items.map((item) => {\n    return {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n    };\n  });\n\n  const customerDetailSubmitHandler = (e) => {\n    e.preventDefault();\n    const customerName = customerNameRef.current.value;\n    const customerAddress = customerAddressRef.current.value;\n    const deliveryTime = deliveryTimeRef.current.value;\n    if (customerName === \"\") {\n      setError(true);\n      setErrorMessage(\"Name is required\");\n      return;\n    }\n    if ((customerAddress === \"\") | (customerAddress.trim().length < 10)) {\n      setError(true);\n      setErrorMessage(\"Address is required\");\n    }\n    if (paymentMethodRefs) console.log(paymentMethodRefs);\n\n    const paymentMethodIndex = paymentOptions.findIndex(\n      (_, index) => paymentMethodRefs[index].current.checked\n    );\n\n    const selectedPaymentMethod =\n      paymentMethodRefs[paymentMethodIndex].current.value;\n\n    let orderInformation = {\n      customerName,\n      customerAddress,\n      deliveryTime,\n      paymentMethod: selectedPaymentMethod,\n      orderedItems: orderedItems,\n      totalAmount: totalAmount,\n    };\n\n    console.log(orderInformation);\n  };\n\n  return (\n    <>\n      <form className={classes.form}>\n        <label>Name</label>\n        <input type=\"text\" placeholder=\"name\" ref={customerNameRef}></input>\n        <label>Address</label>\n        <input\n          type=\"text\"\n          placeholder=\"Full address\"\n          ref={customerAddressRef}\n        ></input>\n        <label>Delivery time</label>\n        <select name=\"deliveryTime\" ref={deliveryTimeRef}>\n          {availableDeliveryTimes.map((time) => (\n            <option>{time}</option>\n          ))}\n        </select>\n        <label>Payment method</label>\n        <div className={classes.row}>\n          {paymentOptions.map((option, index) => {\n            return (\n              <>\n                <input\n                  key={option}\n                  type=\"checkbox\"\n                  value={option}\n                  ref={paymentMethodRefs[index]}\n                  onChange={checkboxChangeHandler}\n                />\n                <label className={classes.label_payment}>{option}</label>\n              </>\n            );\n          })}\n        </div>\n        <p>{!error ? \"\" : errorMessage} </p>\n        <div className={classes.actions}>\n          <button className={classes[\"button--alt\"]} onClick={stepTwoHandler}>\n            cancel\n          </button>\n          <button\n            className={classes.button}\n            onClick={customerDetailSubmitHandler}\n          >\n            next\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}