{"ast":null,"code":"var _jsxFileName = \"/Users/jm/Documents/ReactCourse/food-order-app/src/context/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n  customerData: {}\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * 1;\n    const existingCartItemsIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemsIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + 1\n      };\n      console.log(existingCartItem.amount, action.item.amount);\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemsIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"ADD_CUSTOMER\") {\n    let updatedCustomerData = action.data;\n    let updatedItems = [...state.items];\n    let updatedTotalAmount = state.totalAmount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      customerData: updatedCustomerData\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n  const addCustomerDataToCartHandler = data => {\n    dispatchCartAction({\n      type: \"ADD_CUSTOMER\",\n      data: data\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    addCustomerData: addCustomerDataToCartHandler,\n    customerData: cartState.customerData\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","customerData","cartReducer","state","action","type","updatedTotalAmount","item","price","existingCartItemsIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","amount","console","log","concat","existingCartItemIndex","existingItem","filter","updatedCustomerData","data","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","addCustomerDataToCartHandler","cartContext","addItem","removeItem","addCustomerData","children"],"sources":["/Users/jm/Documents/ReactCourse/food-order-app/src/context/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n  customerData: {},\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * 1;\n\n    const existingCartItemsIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemsIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + 1,\n      };\n      console.log(existingCartItem.amount, action.item.amount);\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemsIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === \"ADD_CUSTOMER\") {\n    let updatedCustomerData = action.data;\n\n    let updatedItems = [...state.items];\n    let updatedTotalAmount = state.totalAmount;\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      customerData: updatedCustomerData,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id,\n    });\n  };\n\n  const addCustomerDataToCartHandler = (data) => {\n    dispatchCartAction({\n      type: \"ADD_CUSTOMER\",\n      data: data,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    addCustomerData: addCustomerDataToCartHandler,\n    customerData: cartState.customerData,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,MAAMC,kBAAkB,GAAGH,KAAK,CAACH,WAAW,GAAGI,MAAM,CAACG,IAAI,CAACC,KAAK,GAAG,CAAC;IAEpE,MAAMC,sBAAsB,GAAGN,KAAK,CAACJ,KAAK,CAACW,SAAS,CACjDH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKP,MAAM,CAACG,IAAI,CAACI,EAAE,CACrC;IACD,MAAMC,gBAAgB,GAAGT,KAAK,CAACJ,KAAK,CAACU,sBAAsB,CAAC;IAC5D,IAAII,YAAY;IAEhB,IAAID,gBAAgB,EAAE;MACpB,MAAME,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBG,MAAM,EAAEH,gBAAgB,CAACG,MAAM,GAAG;MACpC,CAAC;MACDC,OAAO,CAACC,GAAG,CAACL,gBAAgB,CAACG,MAAM,EAAEX,MAAM,CAACG,IAAI,CAACQ,MAAM,CAAC;MACxDF,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACJ,KAAK,CAAC;MAC/Bc,YAAY,CAACJ,sBAAsB,CAAC,GAAGK,WAAW;IACpD,CAAC,MAAM;MACLD,YAAY,GAAGV,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACd,MAAM,CAACG,IAAI,CAAC;IAChD;IAEA,OAAO;MACLR,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEM;IACf,CAAC;EACH;EAEA,IAAIF,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACjC,MAAMc,qBAAqB,GAAGhB,KAAK,CAACJ,KAAK,CAACW,SAAS,CAChDH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKP,MAAM,CAACO,EAAE,CAChC;IACD,MAAMS,YAAY,GAAGjB,KAAK,CAACJ,KAAK,CAACoB,qBAAqB,CAAC;IACvD,MAAMb,kBAAkB,GAAGH,KAAK,CAACH,WAAW,GAAGoB,YAAY,CAACZ,KAAK;IACjE,IAAIK,YAAY;IAChB,IAAIO,YAAY,CAACL,MAAM,KAAK,CAAC,EAAE;MAC7BF,YAAY,GAAGV,KAAK,CAACJ,KAAK,CAACsB,MAAM,CAAEd,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKP,MAAM,CAACO,EAAE,CAAC;IACpE,CAAC,MAAM;MACL,MAAMG,WAAW,GAAG;QAClB,GAAGM,YAAY;QACfL,MAAM,EAAEK,YAAY,CAACL,MAAM,GAAG;MAChC,CAAC;MACDF,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACJ,KAAK,CAAC;MAC/Bc,YAAY,CAACM,qBAAqB,CAAC,GAAGL,WAAW;IACnD;IACA,OAAO;MACLf,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEM;IACf,CAAC;EACH;EAEA,IAAIF,MAAM,CAACC,IAAI,KAAK,cAAc,EAAE;IAClC,IAAIiB,mBAAmB,GAAGlB,MAAM,CAACmB,IAAI;IAErC,IAAIV,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACJ,KAAK,CAAC;IACnC,IAAIO,kBAAkB,GAAGH,KAAK,CAACH,WAAW;IAE1C,OAAO;MACLD,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEM,kBAAkB;MAC/BL,YAAY,EAAEqB;IAChB,CAAC;EACH;EAEA,OAAOxB,gBAAgB;AACzB,CAAC;AAED,MAAM0B,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAG/B,UAAU,CAChDM,WAAW,EACXJ,gBAAgB,CACjB;EAED,MAAM8B,oBAAoB,GAAIrB,IAAI,IAAK;IACrCoB,kBAAkB,CAAC;MACjBtB,IAAI,EAAE,UAAU;MAChBE,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsB,yBAAyB,GAAIlB,EAAE,IAAK;IACxCgB,kBAAkB,CAAC;MACjBtB,IAAI,EAAE,aAAa;MACnBM,EAAE,EAAEA;IACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,4BAA4B,GAAIP,IAAI,IAAK;IAC7CI,kBAAkB,CAAC;MACjBtB,IAAI,EAAE,cAAc;MACpBkB,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,WAAW,GAAG;IAClBhC,KAAK,EAAE2B,SAAS,CAAC3B,KAAK;IACtBC,WAAW,EAAE0B,SAAS,CAAC1B,WAAW;IAClCgC,OAAO,EAAEJ,oBAAoB;IAC7BK,UAAU,EAAEJ,yBAAyB;IACrCK,eAAe,EAAEJ,4BAA4B;IAC7C7B,YAAY,EAAEyB,SAAS,CAACzB;EAC1B,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE8B,WAAY;IAAA,UACtCN,KAAK,CAACU;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GAzCIX,YAAY;AAAA,KAAZA,YAAY;AA2ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}